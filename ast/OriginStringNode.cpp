//
// Created by laugh on 2021/3/15.
//

#include "OriginStringNode.h"

void OriginStringNode::genCode(IoUtil &ioUtil) {
    ioUtil.appendContent(
            "class String : public Object {\n"
            "private:\n"
            "    std::string s;\n"
            "public:\n"
            "    explicit String(const std::string &str) {\n"
            "        s = str;\n"
            "    }\n"
            "    std::string getString() {\n"
            "        return s;\n"
            "    }\n"
            "    static String *newObj() {\n"
            "        return new String(\"\");\n"
            "    }\n"
            "    static String *newObj(const std::string &str) {\n"
            "        return new String(str);\n"
            "    }\n"
            "    Object * plus(Object *obj) override {\n"
            "        auto str = dynamic_cast<String *>(obj);\n"
            "        if (str == nullptr) {\n"
            "            return nullptr;\n"
            "        }\n"
            "        return String::newObj(s + str->getString());\n"
            "    }\n"
            "    Object * lessThan(Object *obj) override {\n"
            "        auto str = dynamic_cast<String *>(obj);\n"
            "        if (str == nullptr) {\n"
            "            return nullptr;\n"
            "        }\n"
            "        return s < str->getString() ? True::newObj() : nullptr;\n"
            "    }\n"
            "    Object * lessEqualThan(Object *obj) override {\n"
            "        auto str = dynamic_cast<String *>(obj);\n"
            "        if (str == nullptr) {\n"
            "            return nullptr;\n"
            "        }\n"
            "        return s <= str->getString() ? True::newObj() : nullptr;\n"
            "    }\n"
            "    Object * moreThan(Object *obj) override {\n"
            "        auto str = dynamic_cast<String *>(obj);\n"
            "        if (str == nullptr) {\n"
            "            return nullptr;\n"
            "        }\n"
            "        return s > str->getString() ? True::newObj() : nullptr;\n"
            "    }\n"
            "    Object * moreEqualThan(Object *obj) override {\n"
            "        auto str = dynamic_cast<String *>(obj);\n"
            "        if (str == nullptr) {\n"
            "            return nullptr;\n"
            "        }\n"
            "        return s >= str->getString() ? True::newObj() : nullptr;\n"
            "    }\n"
            "    Object * equal(Object *obj) override {\n"
            "        auto str = dynamic_cast<String *>(obj);\n"
            "        if (str == nullptr) {\n"
            "            return nullptr;\n"
            "        }\n"
            "        return s == str->getString() ? True::newObj() : nullptr;\n"
            "    }\n"
            "\n"
            "};\n"
    );
    ioUtil.newLine();
}

std::string OriginStringNode::toString() const {
    return "String";
}
